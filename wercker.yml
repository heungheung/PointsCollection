box: node:6
  id: alpine:3.2
build:
  steps:
    - npm-install
    - script:
      name: download
      code: |
        apk add --update nginx && rm -rf /var/cache/apk/*

        mkdir -p /opt/oracle
        cp nginx/nginx.conf /etc/nginx/nginx.conf
        cp nginx/default.conf /etc/nginx/conf.d/default.conf
        rm -rf /usr/share/nginx/html
        unzip website.zip
        cp -r website /usr/share/nginx/html
        chmod -R 755 /usr/share/nginx/html
    - internal/docker-push:
        username: $DOCKER_USER
        password: $DOCKER_PASSWORD
        repository: $DOCKER_REPO
        registry: $DOCKER_REGISTRY
        tag: $WERCKER_GIT_COMMIT
        ports: 80
        cmd: "nginx -g 'daemon off';"

deploy:
  box:
    id: alpine
    cmd: /bin/sh
  steps:
    - bash-template

    - kubectl:
        name: apply namespace
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: apply -f ./ns.yml
    - kubectl:
        name: delete OCR secret
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: delete secret wrelease --namespace=$NS --ignore-not-found=true
    - kubectl:
        name: create OCR secret
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: create secret docker-registry wrelease --docker-server=$DOCKER_REGISTRY --docker-username=$DOCKER_USER --docker-password="$DOCKER_PASSWORD" --docker-email=${WERCKER_APPLICATION_OWNER_NAME}@mail.com --namespace=$NS
    - kubectl:
        name: apply deplyoment
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: apply -f ./workbetter-deploy.yml --namespace=$NS
    - kubectl:
        name: apply service
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: apply -f ./workbetter-service.yml --namespace=$NS
